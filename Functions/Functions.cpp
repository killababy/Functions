#include <iostream>

// Функция — это группа операторов, выполняющих определенную задачу, организованных в виде отдельной единицы в программе. 
// Функции помогают разбить код на более мелкие, управляемые и повторно используемые блоки.

// В C++ в основном существует два типа функций :

// Функции стандартной библиотеки : Предопределенные функции, доступные в стандартной библиотеке C++ такие как sort() strlen() sqrt() и многие другие.
// Эти функции являются частью стандартной библиотеки, поэтому для их использования необходимо включить соответствующий заголовочный файл.

// Пользовательские функции : функции, созданные программистом для выполнения определенной задачи.
// Чтобы создать пользовательскую функцию, необходимо определить функцию и вызвать ее в коде.

// return_type function_name(parameter list) {
//	function body
// }

// return_type: Тип данных выходных данных, создаваемых функцией. Это может быть, указывающее на то, что функция не возвращает никакого значения. void
// function_name : Имя, присвоенное функции в соответствии с соглашениями об именовании C++.
// parameter list : Список входных параметров / аргументов, необходимых для выполнения задачи.
// Это необязательно, вы можете оставить его пустым, когда параметры не нужны.

// int addNumbers(int a, int b) {
	// int sum = a + b;
	// return sum;
// }
// int main() {
	// int num1 = 5, num2 = 10;
	// std::cout << "X = " << num1 << std::endl;
	// std::cout << "Z = " << num2 << std::endl;
	// int result = addNumbers(num1, num2); // Calling the fuction
	// std::cout << "SUMM X AND Z: " << result << std::endl;
	// return 0;
// }

// В этом примере функция принимает два целочисленных параметра и возвращает сумму чисел. 
// Затем мы вызываем эту функцию из функции и выводим результат.

// В некоторых случаях может потребоваться использовать функцию до ее фактического определения. 
// Для этого вам нужно объявить прототип функции в начале вашего кода.Прототип функции — это объявление функции без ее тела, 
// которое информирует компилятор о имени функции, типе возвращаемого значения и параметрах.

// Function prototype
int multiplyNumbers(int x, int y);

int main() {
	int num1 = 3, num2 = 7;
	int result = multiplyNumbers(num1, num2); //Calling the fucntion
	std::cout << "The product is: " << result << std::endl;
	return 0;
}

// Function definition
int multiplyNumbers(int x, int y) {
	int product = x * y;
	return product;
}

// В этом примере мы используем прототип функции перед ее определением. 
// Таким образом, мы можем вызвать функцию из функции, даже если она еще не определена в коде.


